---
import Layout from "../layouts/Layout.astro";
---

<Layout>
    <h1 class="text-3xl font-bold text-center mt-8 mb-4">Visualisation des Manchots</h1>
    <div class="flex flex-col items-center">
        <div class="mb-4">
            <label for="species" class="block text-lg font-medium text-gray-700 mb-2">Choisissez une espèce :</label>
            <select 
                name="species" 
                id="species" 
                class="block w-64 px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
            >
                <option value="">Toutes les espèces</option>
                <option value="Adelie">Adelie</option>
                <option value="Chinstrap">Chinstrap</option>
                <option value="Gentoo">Gentoo</option>
            </select>
        </div>
        <div id="myplot" class="w-full max-w-4xl border border-gray-200 rounded-lg shadow-md p-4 bg-white"></div>
    </div>
</Layout>

<script>
    // Importe la librairie Plot d'ObservableHQ
    import * as Plot from "@observablehq/plot";
    // Importe les données des manchots depuis un fichier JSON
    import penguins from "../assets/penguins.json";

    // Récupère l'élément select pour choisir l'espèce
    const selectSpecies = document.getElementById("species");

    // Fonction pour afficher le graphique
    function renderPlot() {
        // Récupère l'espèce sélectionnée
        const species = selectSpecies.value;

        // Sélectionne la div où le graphique sera affiché
        const plotDiv = document.getElementById("myplot");

        // Vide le contenu précédent de la div
        plotDiv.innerHTML = "";

        // Crée le graphique avec Plot
        const plot = Plot.plot({
            marks: [
                // Ajoute les points du graphique, filtrés selon l'espèce choisie
                Plot.dot(penguins, {
                    x: "culmen_length_mm", // Axe X : longueur du bec
                    y: "culmen_depth_mm", // Axe Y : profondeur du bec
                    stroke: "species", // Couleur selon l'espèce
                    filter: (d) => !species || d.species === species, // Filtre selon l'espèce sélectionnée
                }),
            ],
            style: {
                background: "#f9fafb", // Couleur de fond pour correspondre au style Tailwind
            },
        });

        // Ajoute le graphique à la div
        plotDiv.appendChild(plot);
    }

    // Ajoute un écouteur d'événement pour le changement d'espèce (appel 'renderPlot')
    selectSpecies.addEventListener("change", renderPlot);

    // Affiche le graphique au chargement de la page
    renderPlot();
</script>